<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[Gitpage 构建失败处理]]></title>
      <url>http://mei6.site/2016/11/15/gitpage-build-failed/</url>
      <content type="html"><![CDATA[<!-- abstract -->
<p>今天在发布博客到GitPage的时候，收到一封构建失败的邮件，记录一下处理过程。</p>
<a id="more"></a>
<!-- 开始正文 -->
<p>不知道为了什么，可能是hexo生成博客的时候除了什么问题，发布到GitPage，构建失败了，可心的Github还发了封邮件，通知了我。</p>
<p><img src="http://ogjeb66bz.bkt.clouddn.com/14791454128407.jpg" alt=""></p>
<p>我还一直在那儿刷刷刷页面，怎么都刷不出来更新。</p>
<p>登录到Github，看到新提交的文件都在，说明提交过程没问题。</p>
<p>看看构建博客脚本的输出</p>
<p><img src="http://ogjeb66bz.bkt.clouddn.com/14791451852328.jpg" alt=""></p>
<p>代码明明都在，pull了一下也不好使，清空本地git库文件，保留.git文件夹。</p>
<figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ git <span class="keyword">add</span><span class="bash"> *</span></div><div class="line">$ git commit -m <span class="string">'remove all'</span></div><div class="line">$ git push</div></pre></td></tr></table></figure>
<p>然后重新执行构建hexo的脚本，发布成功。看来重启作为网管必杀技之首是有道理的，放之四海而皆准。</p>
<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-87257256-1', 'auto');
  ga('send', 'pageview');

</script>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[在项目中使用Docker]]></title>
      <url>http://mei6.site/2016/11/14/develop-in-docker/</url>
      <content type="html"><![CDATA[<p>在一个基本的java应用开发过程中，如何将docker应用到各个环节？</p>
<p>传统流程，没有Docker参与：</p>
<ol>
<li>在开发之前，需要先搭建开发的框架，share到Github上，创建一个或多个git repository。</li>
<li>开发者从Github上clone框架代码到本地的开发环境，编写功能代码。</li>
<li>功能代码开发完成，并通过单元测试后，提交代码到Github上</li>
<li>构建代码，产生可以部署的jar或者war文件。</li>
<li>发布到应用服务器，如果是Web应用会发布到tomcat，如果是daemon或者jar应用，发布到服务器并执行一系列动作。</li>
<li>程序开始工作，提供服务。</li>
</ol>
<p>上面的步骤很简单，也是最最基本的开发流程，尽管不同团队使用的工具有所不同，这些流程都是不可避免的。</p>
<p>有了Docker之后，这些工作该怎么搞？先来梳理一下应用开发的各个基本要素：</p>
<ol>
<li>Github - 万物的基础，代码，放到Github里做版本控制和存储</li>
<li>DB - 持久化数据的数据库</li>
<li>Maven - 通过maven将代码构建成适当的形态，jar或者war</li>
<li>Nexus - 管理maven构建的地方</li>
<li>Tomcat - Web应用服务器，部署web应用</li>
<li>Jenkins - 自动化更新代码、构建并发布，持续集成</li>
<li>ELK - 日志处理</li>
<li>MQ - 消息队列</li>
<li>Docker - 存放各个要素的容器</li>
<li>物理服务器</li>
</ol>
<hr>
<p>本地的开发，单元测试，代码提交与docker无关。其他的需要哪些docker呢？</p>
<p><strong>Nexus</strong></p>
<p>从构建开始，自从有了Maven，再也不用通过Eclipse、Intellij打包了，写好pom，maven install一下，包就放到target下面了。项目分了多模块，就会有多个包，包之间也会或多或少产生依赖或者被依赖的关系。私有的代码构建，就用到了Nexus，把包发布到Nexus的私有库里面，maven构建依赖的时候就能找到项目内的模块了。当然Nexus不仅仅如此，其他功能不多说了。</p>
<p>在自己的服务上安装Nexus的Server，通过maven配置文件settings里配置使用的Nexus地址。现在需要将Nexus放到docker的容器里。</p>
<p>好，第一个docker实例，起个名字交<code>docker-nexus</code>吧。</p>
<p><a href="">在Mac上安装Docker Nexus</a></p>
<p><strong>Tomcat</strong></p>
<p>Web应用发布到Web应用服务器，应用才能跑起来，才能访问到应用提供的服务。Web应用服务器也有很多，Resin、Jetty、Tomcat等等，三脚猫Tomcat用的最多，也需要在物理服务器上安装一个Tomcat。</p>
<p>第二个docker实例，<code>docker-tomcat</code>。</p>
<p><strong>DB</strong></p>
<p>拥有有持久化数据的应用能提供更丰富的服务，<code>docker-DB</code>。</p>
<p><strong>Jenkins</strong></p>
<p>不想重复手工劳动，让Jenkins来做，<code>docker-jenkins</code>。</p>
<p><strong>ELK</strong></p>
<p>日志太多，每次都要ssh到服务器再tail -f logfile？ELK可以更简单，也可以更强大，<code>docker-Elastic</code>。</p>
<p><strong>MQ</strong></p>
<p><code>docker-mq</code></p>
<p>暂时这5个docker基本可以满足需求了。物理服务器作为docker的宿主，需要几个看情况。</p>
<p>看情况，信息量好大。</p>
<hr>
<p>假设开发的应用每天几千次访问，几千条数据，只有一台服务器，ok，把上面的5个docker都放到这台服务器上，设置不同的访问端口：</p>
<ul>
<li>Nexus - 8081</li>
<li>Tomcat - 8080</li>
<li>DB - 3306</li>
<li>Jenkins - 9090</li>
<li>Kibana - 10080</li>
<li>MQ - 8161</li>
</ul>
<p>好，问题来了，开发环境怎么办？测试环境怎么办？生产环境呢？</p>
<p>方案一：
在开发本地先安装配置好docker，测试通过再放到服务器上。假如是一个人的项目，应该没问题，两个人以上怎么办？</p>
<p>方案二：
在测试环境安装配置docker，开发环境、生产环境pull下来，开发过程需要调整再push回测试环境，貌似可以。</p>
<p>方案三：
创建docker私有库，本地配置好docker实例，通过Jenkins构建、发布docker到各个环境，让Jenkins来管理。</p>
<p>Jenkins2.x提供的pipeline，简直就是为docker而生。</p>
<hr>
<p>动手试试？</p>
<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-87257256-1', 'auto');
  ga('send', 'pageview');

</script>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[创建Docker私有库]]></title>
      <url>http://mei6.site/2016/11/14/docker-registry/</url>
      <content type="html"><![CDATA[<p>Docker 私有库同样也是一个docker实例</p>
<p>下载私有库镜像</p>
<figure class="highlight elixir"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$ </span>docker pull registry</div></pre></td></tr></table></figure>
<p><img src="http://ogjeb66bz.bkt.clouddn.com/14791214165430.jpg" alt=""></p>
<p>创建实例并命名</p>
<figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ docker <span class="keyword">run</span><span class="bash"> <span class="_">-d</span> -p 5000:5000 -v `<span class="built_in">pwd</span>`/data:/var/lib/registry --restart=always --name yt-registry registry</span></div></pre></td></tr></table></figure>
<p><img src="http://ogjeb66bz.bkt.clouddn.com/14791374859076.jpg" alt=""></p>
<p>查看</p>
<figure class="highlight elixir"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$ </span>docker p</div></pre></td></tr></table></figure>
<p><img src="http://ogjeb66bz.bkt.clouddn.com/14791375201866.jpg" alt=""></p>
<p>ok，到这里私有库就创建完毕了。来测试一下，把nexus上传到私有库。</p>
<pre><code>参考：
http://www.jianshu.com/p/00ac18fce367
http://www.cnblogs.com/52fhy/p/5998747.html

感谢以上文章作者
</code></pre>
<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-87257256-1', 'auto');
  ga('send', 'pageview');

</script>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[在Mac上安装Docker Nexus]]></title>
      <url>http://mei6.site/2016/11/14/docker-nexus/</url>
      <content type="html"><![CDATA[<a id="more"></a>
<h2 id="安装nexus-docker"><a class="header-anchor" href="#安装nexus-docker"> </a>安装Nexus Docker</h2>
<p>配置Docker镜像加速：</p>
<p>灵雀加速：<a href="http://houchaohann.m.alauda.cn" target="_blank" rel="external">http://houchaohann.m.alauda.cn</a>
阿里云加速：<a href="https://3wky8dz8.mirror.aliyuncs.com" target="_blank" rel="external">https://3wky8dz8.mirror.aliyuncs.com</a></p>
<p><img src="http://ogjeb66bz.bkt.clouddn.com/14790953545706.jpg" alt=""></p>
<p>添加完成后要点击<code>Apply &amp; Restart</code>。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ docker pull sonatype/nexus</div></pre></td></tr></table></figure>
<p><img src="http://ogjeb66bz.bkt.clouddn.com/14790950831929.jpg" alt=""></p>
<p>启动容器，命名：</p>
<figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ docker <span class="keyword">run</span><span class="bash"> <span class="_">-d</span> -p 8081:8081 --name yt-nexus sonatype/nexus</span></div></pre></td></tr></table></figure>
<p><img src="http://ogjeb66bz.bkt.clouddn.com/14790980839491.jpg" alt=""></p>
<p>查看docker
<img src="http://ogjeb66bz.bkt.clouddn.com/14790981521176.jpg" alt=""></p>
<p>访问：<a href="http://localhost:8081/nexus" target="_blank" rel="external">http://localhost:8081/nexus</a>
<img src="media/14791157540597.jpg" alt=""></p>
<p>安装完成，比下载nexus安装部署方便不少。</p>
<h2 id="配置nexus-修改管理员密码"><a class="header-anchor" href="#配置nexus-修改管理员密码"> </a>配置Nexus，修改管理员密码</h2>
<p>默认管理员账户：<code>admin</code>，密码: <code>admin123</code>。
<img src="media/14791157291333.jpg" alt=""></p>
<h2 id="上传docker实例到阿里云"><a class="header-anchor" href="#上传docker实例到阿里云"> </a>上传docker实例到阿里云</h2>
<h2 id="建私有库"><a class="header-anchor" href="#建私有库"> </a>建私有库</h2>
<p>[toc]</p>
<hr>
<pre><code>参考：
http://www.kennethyo.me/2016/09/01/untitled-1472722428873/

感谢以上文章作者
</code></pre>
<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-87257256-1', 'auto');
  ga('send', 'pageview');

</script>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Guava Odds Ends]]></title>
      <url>http://mei6.site/2016/11/13/guava-Odds-Ends/</url>
      <content type="html"><![CDATA[<!-- 开始正文 -->
<p>目录</p>
<ol>
<li><a href="http://www.mei6.site/2016/11/12/PacktPub-Getting-Started-with-Google-Guava/" target="_blank" rel="external">Getting.Started.with.Google.Guava</a></li>
<li><a href="http://www.mei6.site/2016/11/13/guava-util/" target="_blank" rel="external">Guava Utilities</a></li>
<li><a href="http://www.mei6.site/2016/11/13/guava-function/" target="_blank" rel="external">Guava Function</a></li>
<li><a href="http://www.mei6.site/2016/11/13/guava-collection/" target="_blank" rel="external">Guava Collection</a></li>
<li><a href="http://www.mei6.site/2016/11/13/guava-Concurrency/" target="_blank" rel="external">Guava Concurrency</a></li>
<li><a href="http://www.mei6.site/2016/11/13/guava-Cache/" target="_blank" rel="external">Guava Cache</a></li>
<li><a href="http://www.mei6.site/2016/11/13/guava-EventBus/" target="_blank" rel="external">Guava EventBus</a></li>
<li><a href="http://www.mei6.site/2016/11/13/guava-Files/" target="_blank" rel="external">Guava Files</a></li>
<li><a href="http://www.mei6.site/2016/11/13/guava-Odds-Ends/" target="_blank" rel="external">Guava Odds Ends</a></li>
</ol>
<hr>
<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-87257256-1', 'auto');
  ga('send', 'pageview');

</script>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Guava Files]]></title>
      <url>http://mei6.site/2016/11/13/guava-Files/</url>
      <content type="html"><![CDATA[<!-- 开始正文 -->
<p>目录</p>
<ol>
<li><a href="http://www.mei6.site/2016/11/12/PacktPub-Getting-Started-with-Google-Guava/" target="_blank" rel="external">Getting.Started.with.Google.Guava</a></li>
<li><a href="http://www.mei6.site/2016/11/13/guava-util/" target="_blank" rel="external">Guava Utilities</a></li>
<li><a href="http://www.mei6.site/2016/11/13/guava-function/" target="_blank" rel="external">Guava Function</a></li>
<li><a href="http://www.mei6.site/2016/11/13/guava-collection/" target="_blank" rel="external">Guava Collection</a></li>
<li><a href="http://www.mei6.site/2016/11/13/guava-Concurrency/" target="_blank" rel="external">Guava Concurrency</a></li>
<li><a href="http://www.mei6.site/2016/11/13/guava-Cache/" target="_blank" rel="external">Guava Cache</a></li>
<li><a href="http://www.mei6.site/2016/11/13/guava-EventBus/" target="_blank" rel="external">Guava EventBus</a></li>
<li><a href="http://www.mei6.site/2016/11/13/guava-Files/" target="_blank" rel="external">Guava Files</a></li>
<li><a href="http://www.mei6.site/2016/11/13/guava-Odds-Ends/" target="_blank" rel="external">Guava Odds Ends</a></li>
</ol>
<hr>
<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-87257256-1', 'auto');
  ga('send', 'pageview');

</script>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Guava EventBus]]></title>
      <url>http://mei6.site/2016/11/13/guava-EventBus/</url>
      <content type="html"><![CDATA[<!-- 开始正文 -->
<p>目录</p>
<ol>
<li><a href="http://www.mei6.site/2016/11/12/PacktPub-Getting-Started-with-Google-Guava/" target="_blank" rel="external">Getting.Started.with.Google.Guava</a></li>
<li><a href="http://www.mei6.site/2016/11/13/guava-util/" target="_blank" rel="external">Guava Utilities</a></li>
<li><a href="http://www.mei6.site/2016/11/13/guava-function/" target="_blank" rel="external">Guava Function</a></li>
<li><a href="http://www.mei6.site/2016/11/13/guava-collection/" target="_blank" rel="external">Guava Collection</a></li>
<li><a href="http://www.mei6.site/2016/11/13/guava-Concurrency/" target="_blank" rel="external">Guava Concurrency</a></li>
<li><a href="http://www.mei6.site/2016/11/13/guava-Cache/" target="_blank" rel="external">Guava Cache</a></li>
<li><a href="http://www.mei6.site/2016/11/13/guava-EventBus/" target="_blank" rel="external">Guava EventBus</a></li>
<li><a href="http://www.mei6.site/2016/11/13/guava-Files/" target="_blank" rel="external">Guava Files</a></li>
<li><a href="http://www.mei6.site/2016/11/13/guava-Odds-Ends/" target="_blank" rel="external">Guava Odds Ends</a></li>
</ol>
<hr>
<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-87257256-1', 'auto');
  ga('send', 'pageview');

</script>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Guava Cache]]></title>
      <url>http://mei6.site/2016/11/13/guava-Cache/</url>
      <content type="html"><![CDATA[<!-- 开始正文 -->
<p>目录</p>
<ol>
<li><a href="http://www.mei6.site/2016/11/12/PacktPub-Getting-Started-with-Google-Guava/" target="_blank" rel="external">Getting.Started.with.Google.Guava</a></li>
<li><a href="http://www.mei6.site/2016/11/13/guava-util/" target="_blank" rel="external">Guava Utilities</a></li>
<li><a href="http://www.mei6.site/2016/11/13/guava-function/" target="_blank" rel="external">Guava Function</a></li>
<li><a href="http://www.mei6.site/2016/11/13/guava-collection/" target="_blank" rel="external">Guava Collection</a></li>
<li><a href="http://www.mei6.site/2016/11/13/guava-Concurrency/" target="_blank" rel="external">Guava Concurrency</a></li>
<li><a href="http://www.mei6.site/2016/11/13/guava-Cache/" target="_blank" rel="external">Guava Cache</a></li>
<li><a href="http://www.mei6.site/2016/11/13/guava-EventBus/" target="_blank" rel="external">Guava EventBus</a></li>
<li><a href="http://www.mei6.site/2016/11/13/guava-Files/" target="_blank" rel="external">Guava Files</a></li>
<li><a href="http://www.mei6.site/2016/11/13/guava-Odds-Ends/" target="_blank" rel="external">Guava Odds Ends</a></li>
</ol>
<hr>
<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-87257256-1', 'auto');
  ga('send', 'pageview');

</script>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Guava Concurrency]]></title>
      <url>http://mei6.site/2016/11/13/guava-Concurrency/</url>
      <content type="html"><![CDATA[<!-- 开始正文 -->
<p>目录</p>
<ol>
<li><a href="http://www.mei6.site/2016/11/12/PacktPub-Getting-Started-with-Google-Guava/" target="_blank" rel="external">Getting.Started.with.Google.Guava</a></li>
<li><a href="http://www.mei6.site/2016/11/13/guava-util/" target="_blank" rel="external">Guava Utilities</a></li>
<li><a href="http://www.mei6.site/2016/11/13/guava-function/" target="_blank" rel="external">Guava Function</a></li>
<li><a href="http://www.mei6.site/2016/11/13/guava-collection/" target="_blank" rel="external">Guava Collection</a></li>
<li><a href="http://www.mei6.site/2016/11/13/guava-Concurrency/" target="_blank" rel="external">Guava Concurrency</a></li>
<li><a href="http://www.mei6.site/2016/11/13/guava-Cache/" target="_blank" rel="external">Guava Cache</a></li>
<li><a href="http://www.mei6.site/2016/11/13/guava-EventBus/" target="_blank" rel="external">Guava EventBus</a></li>
<li><a href="http://www.mei6.site/2016/11/13/guava-Files/" target="_blank" rel="external">Guava Files</a></li>
<li><a href="http://www.mei6.site/2016/11/13/guava-Odds-Ends/" target="_blank" rel="external">Guava Odds Ends</a></li>
</ol>
<hr>
<h2 id="monitor"><a class="header-anchor" href="#monitor"> </a>Monitor</h2>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MonitorSample</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> List&lt;String&gt; list = <span class="keyword">new</span> ArrayList&lt;String&gt;();</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> MAX_SIZE = <span class="number">10</span>;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> Monitor monitor = <span class="keyword">new</span> Monitor();</div><div class="line">    <span class="keyword">private</span> Monitor.Guard listBelowCapacity = <span class="keyword">new</span> Monitor.Guard(monitor) &#123;</div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isSatisfied</span><span class="params">()</span> </span>&#123;</div><div class="line">            <span class="keyword">return</span> (list.size() &lt; MAX_SIZE);</div><div class="line">        &#125;</div><div class="line">    &#125;;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addToList</span><span class="params">(String item)</span> <span class="keyword">throws</span> InterruptedException </span>&#123;</div><div class="line">        monitor.enterWhen(listBelowCapacity);</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            list.add(item);</div><div class="line">        &#125; <span class="keyword">finally</span> &#123;</div><div class="line">            monitor.leave();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>Monitor best practice</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> (monitor.enterIf(guardCondition)) &#123;</div><div class="line">    <span class="keyword">try</span> &#123;</div><div class="line">        doWork();</div><div class="line">    &#125; <span class="keyword">finally</span> &#123;</div><div class="line">        monitor.leave();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="listenablefuture"><a class="header-anchor" href="#listenablefuture"> </a>ListenableFuture</h2>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">ExecutorService executor = Executors.newCachedThreadPool();</div><div class="line">Future&lt;Integer&gt; future = executor.submit(<span class="keyword">new</span> Callable&lt;Integer&gt;()&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">call</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</div><div class="line">        <span class="keyword">return</span> service.getCount();</div><div class="line">    &#125;</div><div class="line">&#125;);<span class="comment">//Retrieve the value of computation</span>Integer count = future.get();</div></pre></td></tr></table></figure>
<h3 id="obtaining-a-listenablefuture-interface"><a class="header-anchor" href="#obtaining-a-listenablefuture-interface"> </a>Obtaining a ListenableFuture interface</h3>
<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-87257256-1', 'auto');
  ga('send', 'pageview');

</script>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Guava Collection]]></title>
      <url>http://mei6.site/2016/11/13/guava-collection/</url>
      <content type="html"><![CDATA[<!-- 开始正文 -->
<p>目录</p>
<ol>
<li><a href="http://www.mei6.site/2016/11/12/PacktPub-Getting-Started-with-Google-Guava/" target="_blank" rel="external">Getting.Started.with.Google.Guava</a></li>
<li><a href="http://www.mei6.site/2016/11/13/guava-util/" target="_blank" rel="external">Guava Utilities</a></li>
<li><a href="http://www.mei6.site/2016/11/13/guava-function/" target="_blank" rel="external">Guava Function</a></li>
<li><a href="http://www.mei6.site/2016/11/13/guava-collection/" target="_blank" rel="external">Guava Collection</a></li>
<li><a href="http://www.mei6.site/2016/11/13/guava-Concurrency/" target="_blank" rel="external">Guava Concurrency</a></li>
<li><a href="http://www.mei6.site/2016/11/13/guava-Cache/" target="_blank" rel="external">Guava Cache</a></li>
<li><a href="http://www.mei6.site/2016/11/13/guava-EventBus/" target="_blank" rel="external">Guava EventBus</a></li>
<li><a href="http://www.mei6.site/2016/11/13/guava-Files/" target="_blank" rel="external">Guava Files</a></li>
<li><a href="http://www.mei6.site/2016/11/13/guava-Odds-Ends/" target="_blank" rel="external">Guava Odds Ends</a></li>
</ol>
<hr>
<h2 id="集合类工具"><a class="header-anchor" href="#集合类工具"> </a>集合类工具</h2>
<h3 id="fluentiterable"><a class="header-anchor" href="#fluentiterable"> </a>FluentIterable</h3>
<p>流式迭代器</p>
<h4 id="fluentiterable-flter"><a class="header-anchor" href="#fluentiterable-flter"> </a>FluentIterable.flter</h4>
<p>过滤集合中符合条件的元素，并使用<code>Iterables.contains</code>进行验证</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 代码位置：bbejeck.guava.chapter4.FluentIterablesTest</span></div><div class="line"></div><div class="line"><span class="meta">@Before</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUp</span><span class="params">()</span> </span>&#123;</div><div class="line">    person1 = <span class="keyword">new</span> Person(<span class="string">"Wilma"</span>, <span class="string">"Flintstone"</span>, <span class="number">30</span>, <span class="string">"F"</span>);</div><div class="line">    person2 = <span class="keyword">new</span> Person(<span class="string">"Fred"</span>, <span class="string">"Flintstone"</span>, <span class="number">32</span>, <span class="string">"M"</span>);</div><div class="line">    person3 = <span class="keyword">new</span> Person(<span class="string">"Betty"</span>, <span class="string">"Rubble"</span>, <span class="number">31</span>, <span class="string">"F"</span>);</div><div class="line">    person4 = <span class="keyword">new</span> Person(<span class="string">"Barney"</span>, <span class="string">"Rubble"</span>, <span class="number">33</span>, <span class="string">"M"</span>);</div><div class="line">    personList = Lists.newArrayList(person1, person2, person3, person4);</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"><span class="meta">@Test</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFilter</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</div><div class="line">    Iterable&lt;Person&gt; personsFilteredByAge = FluentIterable.from(personList).filter(<span class="keyword">new</span> Predicate&lt;Person&gt;() &#123;</div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">apply</span><span class="params">(Person input)</span> </span>&#123;</div><div class="line">            <span class="keyword">return</span> input.getAge() &gt; <span class="number">31</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line"></div><div class="line">    assertThat(Iterables.contains(personsFilteredByAge, person2), is(<span class="keyword">true</span>));</div><div class="line">    assertThat(Iterables.contains(personsFilteredByAge, person4), is(<span class="keyword">true</span>));</div><div class="line">    assertThat(Iterables.contains(personsFilteredByAge, person1), is(<span class="keyword">false</span>));</div><div class="line">    assertThat(Iterables.contains(personsFilteredByAge, person3), is(<span class="keyword">false</span>));</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="fluentiterable-transform"><a class="header-anchor" href="#fluentiterable-transform"> </a>FluentIterable.transform</h4>
<p>操作集合中的每个元素，可能会修改集合中的任意或者全部元素，并且用链式操作<code>toList()</code>返回新的集合。transform还提供了<code>toSet</code>, <code>toMap</code>, <code>toSortedList</code>, <code>toSortedSet</code>链式操作可供选择。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 代码位置：bbejeck.guava.chapter4.FluentIterablesTest</span></div><div class="line"></div><div class="line"><span class="meta">@Test</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testTransform</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</div><div class="line">    List&lt;String&gt; transformed = FluentIterable.from(personList).transform(<span class="keyword">new</span> Function&lt;Person, String&gt;() &#123;</div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> String <span class="title">apply</span><span class="params">(Person input)</span> </span>&#123;</div><div class="line">            <span class="keyword">return</span> Joiner.on(<span class="string">'#'</span>).join(input.getLastName(), input.getFirstName(), input.getAge());</div><div class="line">        &#125;</div><div class="line">    &#125;).toList();</div><div class="line">    assertThat(transformed.get(<span class="number">1</span>), is(<span class="string">"Flintstone#Fred#32"</span>));</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="lists"><a class="header-anchor" href="#lists"> </a>Lists</h3>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">List&lt;Person&gt; personList = Lists.newArrayList();</div></pre></td></tr></table></figure>
<p>为List分片</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">List&lt;Person&gt; personList = Lists.newArrayList(person1,person2,person3,person4);</div><div class="line"></div><div class="line">List&lt;List&lt;Person&gt;&gt; subList = Lists.partition(personList,<span class="number">2</span>);</div></pre></td></tr></table></figure>
<p>结果为：<code>[[person1,person2],[person3, person4]]</code>，如果每个分片的大小为3，结果为：<code>[[person1,person2,person3],[person4]]</code>。</p>
<h3 id="sets"><a class="header-anchor" href="#sets"> </a>Sets</h3>
<h4 id="sets-difference"><a class="header-anchor" href="#sets-difference"> </a>Sets.difference</h4>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">Set&lt;String&gt; s1 = Sets.newHashSet(<span class="string">"1"</span>,<span class="string">"2"</span>,<span class="string">"3"</span>);</div><div class="line">Set&lt;String&gt; s2 = Sets.newHashSet(<span class="string">"2"</span>,<span class="string">"3"</span>,<span class="string">"4"</span>);</div><div class="line">Sets.difference(s1,s2);</div></pre></td></tr></table></figure>
<p>以上代码会返回一个SetView实例，带有一个元素<code>1</code>，表示第一个集合不存在于第二个集合中的元素。如果交换两个参数的位置，则会返回<code>4</code>.</p>
<h4 id="sets-symmetricdifference"><a class="header-anchor" href="#sets-symmetricdifference"> </a>Sets.symmetricDifference</h4>
<p>对称差异，返回两个集合中所有不同的元素</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">Set&lt;String&gt; s1 = Sets.newHashSet(<span class="string">"1"</span>,<span class="string">"2"</span>,<span class="string">"3"</span>);</div><div class="line">Set&lt;String&gt; s2 = Sets.newHashSet(<span class="string">"2"</span>,<span class="string">"3"</span>,<span class="string">"4"</span>);</div><div class="line">Sets.SetView setView = Sets.symmetricDifference(s1,s2);</div><div class="line"><span class="comment">//Would return [1,4]</span></div></pre></td></tr></table></figure>
<h4 id="sets-intersection"><a class="header-anchor" href="#sets-intersection"> </a>Sets.intersection</h4>
<p>返回集合中交叉的元素，取集合的交集</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Test</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testIntersection</span><span class="params">()</span></span>&#123;</div><div class="line">    Set&lt;String&gt; s1 = Sets.newHashSet(<span class="string">"1"</span>,<span class="string">"2"</span>,<span class="string">"3"</span>);</div><div class="line">    Set&lt;String&gt; s2 = Sets.newHashSet(<span class="string">"3"</span>,<span class="string">"2"</span>,<span class="string">"4"</span>);</div><div class="line">    Sets.SetView&lt;String&gt; sv = Sets.intersection(s1,s2);</div><div class="line">    assertThat(sv.size()==<span class="number">2</span> &amp;&amp; sv.contains(<span class="string">"2"</span>) &amp;&amp; sv.contains(<span class="string">"3"</span>),is(<span class="keyword">true</span>));</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="sets-union"><a class="header-anchor" href="#sets-union"> </a>Sets.union</h4>
<p>取集合的并集</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Test</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testUnion</span><span class="params">()</span></span>&#123;</div><div class="line">    Set&lt;String&gt; s1 = Sets.newHashSet(<span class="string">"1"</span>,<span class="string">"2"</span>,<span class="string">"3"</span>);</div><div class="line">    Set&lt;String&gt; s2 = Sets.newHashSet(<span class="string">"3"</span>,<span class="string">"2"</span>,<span class="string">"4"</span>);</div><div class="line">    Sets.SetView&lt;String&gt; sv = Sets.union(s1,s2);</div><div class="line">    assertThat(sv.size()==<span class="number">4</span> &amp;&amp;</div><div class="line">            sv.contains(<span class="string">"2"</span>) &amp;&amp;</div><div class="line">            sv.contains(<span class="string">"3"</span>) &amp;&amp;</div><div class="line">            sv.contains(<span class="string">"4"</span>) &amp;&amp;</div><div class="line">            sv.contains(<span class="string">"1"</span>),is(<span class="keyword">true</span>));</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="maps"><a class="header-anchor" href="#maps"> </a>Maps</h3>
<p>通常创建Map的方式</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">List&lt;Book&gt; books = someService.getBooks();</div><div class="line">Map&lt;String,Book&gt; bookMap = <span class="keyword">new</span> HashMap&lt;String,Book&gt;();</div><div class="line"><span class="keyword">for</span>(Book book : books)&#123;</div><div class="line">    bookMap.put(book.getIsbn(),book);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>也许还有更好的方式。</p>
<h4 id="maps-uniqueindex"><a class="header-anchor" href="#maps-uniqueindex"> </a>Maps.uniqueIndex</h4>
<p>通过Function匿名方法为元素设置key。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Test</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">uniqueIndexTest</span><span class="params">()</span></span>&#123;</div><div class="line">    Map&lt;String,Book&gt; bookMap = Maps.uniqueIndex(books,<span class="keyword">new</span> Function&lt;Book, String&gt;() &#123;</div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> String <span class="title">apply</span><span class="params">(Book book)</span> </span>&#123;</div><div class="line">            <span class="keyword">return</span> book.getIsbn();</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line">   assertThat(bookMap.get(<span class="string">"ISBN123"</span>),is(book));</div><div class="line">   assertThat(bookMap.get(<span class="string">"ISBN456"</span>),is(book2));</div><div class="line">   assertThat(bookMap.get(<span class="string">"ISBN789"</span>),is(book3));</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="maps-asmap"><a class="header-anchor" href="#maps-asmap"> </a>Maps.asMap</h4>
<h4 id="maps-tomap"><a class="header-anchor" href="#maps-tomap"> </a>Maps.toMap</h4>
<h4 id="arraylistmultimap"><a class="header-anchor" href="#arraylistmultimap"> </a>ArrayListMultimap</h4>
<p>用来创建value是ArrayList的Map，put时直接输入key和list的值，get时获得key对应的List。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Test</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testArrayListMultiMap</span><span class="params">()</span></span>&#123;</div><div class="line">    ArrayListMultimap&lt;String,String&gt; multiMap = ArrayListMultimap.create();</div><div class="line">    multiMap.put(<span class="string">"Foo"</span>,<span class="string">"1"</span>);</div><div class="line">    multiMap.put(<span class="string">"Foo"</span>,<span class="string">"2"</span>);</div><div class="line">    multiMap.put(<span class="string">"Foo"</span>,<span class="string">"3"</span>);</div><div class="line">    List&lt;String&gt; expected = Lists.newArrayList(<span class="string">"1"</span>,<span class="string">"2"</span>,<span class="string">"3"</span>);</div><div class="line">    assertEquals(multiMap.get(<span class="string">"Foo"</span>),expected);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="meta">@Test</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testArrayListMultiMapSize</span><span class="params">()</span></span>&#123;</div><div class="line">    ArrayListMultimap&lt;String,String&gt; multiMap = ArrayListMultimap.create();</div><div class="line">    multiMap.put(<span class="string">"Foo"</span>,<span class="string">"1"</span>);</div><div class="line">    multiMap.put(<span class="string">"Foo"</span>,<span class="string">"2"</span>);</div><div class="line">    multiMap.put(<span class="string">"Foo"</span>,<span class="string">"3"</span>);</div><div class="line">    multiMap.put(<span class="string">"Bar"</span>,<span class="string">"1"</span>);</div><div class="line">    multiMap.put(<span class="string">"Bar"</span>,<span class="string">"2"</span>);</div><div class="line">    multiMap.put(<span class="string">"Bar"</span>,<span class="string">"3"</span>);</div><div class="line">    Collection&lt;String&gt; expected = Lists.newArrayList(<span class="string">"1"</span>,<span class="string">"2"</span>,<span class="string">"3"</span>,<span class="string">"1"</span>,<span class="string">"2"</span>,<span class="string">"3"</span>);</div><div class="line">    assertThat(multiMap.size(),is(<span class="number">6</span>));</div><div class="line">    assertArrayEquals(multiMap.values().toArray(), expected.toArray());</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="meta">@Test</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testArrayListMultiMapSizeAsMap</span><span class="params">()</span></span>&#123;</div><div class="line">    ArrayListMultimap&lt;String,String&gt; multiMap = ArrayListMultimap.create();</div><div class="line">    multiMap.put(<span class="string">"Foo"</span>,<span class="string">"1"</span>);</div><div class="line">    multiMap.put(<span class="string">"Foo"</span>,<span class="string">"2"</span>);</div><div class="line">    multiMap.put(<span class="string">"Foo"</span>,<span class="string">"3"</span>);</div><div class="line">    multiMap.put(<span class="string">"Bar"</span>,<span class="string">"1"</span>);</div><div class="line">    multiMap.put(<span class="string">"Bar"</span>,<span class="string">"2"</span>);</div><div class="line">    multiMap.put(<span class="string">"Bar"</span>,<span class="string">"3"</span>);</div><div class="line">    Map&lt;String,Collection&lt;String&gt;&gt; map = multiMap.asMap();</div><div class="line">    assertThat(map.size(),is(<span class="number">2</span>));</div><div class="line">    map.get(<span class="string">"Foo"</span>).remove(<span class="string">"3"</span>);</div><div class="line">    assertThat(multiMap.size(), is(<span class="number">5</span>));</div><div class="line">    multiMap.put(<span class="string">"Baz"</span>, <span class="string">"1"</span>);</div><div class="line">    assertThat(map.size(), is(<span class="number">3</span>));</div><div class="line">    map.get(<span class="string">"Foo"</span>).add(<span class="string">"4"</span>);</div><div class="line">    assertThat(multiMap.size(), is(<span class="number">7</span>));</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="meta">@Test</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testArrayListMultimapSameKeyValue</span><span class="params">()</span></span>&#123;</div><div class="line">    ArrayListMultimap&lt;String,String&gt; multiMap = ArrayListMultimap.create();</div><div class="line">    multiMap.put(<span class="string">"Bar"</span>,<span class="string">"1"</span>);</div><div class="line">    multiMap.put(<span class="string">"Bar"</span>,<span class="string">"3"</span>);</div><div class="line">    multiMap.put(<span class="string">"Bar"</span>,<span class="string">"2"</span>);</div><div class="line">    multiMap.put(<span class="string">"Bar"</span>,<span class="string">"3"</span>);</div><div class="line">    multiMap.put(<span class="string">"Bar"</span>,<span class="string">"3"</span>);</div><div class="line">    List&lt;String&gt; expected = Lists.newArrayList(<span class="string">"1"</span>,<span class="string">"3"</span>,<span class="string">"2"</span>,<span class="string">"3"</span>,<span class="string">"3"</span>);</div><div class="line">    assertEquals(multiMap.get(<span class="string">"Bar"</span>),expected);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>直接操作map向map的value，一个ArrayList中添加元素，通过asMap方法删除元素。</p>
<p>asMap用法</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Map&lt;String,Collection&lt;String&gt;&gt; map = multiMap.asMap();</div></pre></td></tr></table></figure>
<h4 id="hashmultimap"><a class="header-anchor" href="#hashmultimap"> </a>HashMultimap</h4>
<p>只保留唯一的键值对，去除重复的键值对。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Test</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testHashMultiMapSameKeyValue</span><span class="params">()</span></span>&#123;</div><div class="line">    HashMultimap&lt;String,String&gt; multiMap = HashMultimap.create();</div><div class="line">    multiMap.put(<span class="string">"Bar"</span>,<span class="string">"1"</span>);</div><div class="line">    multiMap.put(<span class="string">"Bar"</span>,<span class="string">"2"</span>);</div><div class="line">    multiMap.put(<span class="string">"Bar"</span>,<span class="string">"3"</span>);</div><div class="line">    multiMap.put(<span class="string">"Bar"</span>,<span class="string">"3"</span>);</div><div class="line">    multiMap.put(<span class="string">"Bar"</span>,<span class="string">"3"</span>);</div><div class="line">    assertThat(multiMap.size(),is(<span class="number">3</span>));</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="bimap"><a class="header-anchor" href="#bimap"> </a>BiMap</h3>
<p>value也是唯一的，BiMap会做类似将value
反转为key的操作，来保证value的唯一。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Test</span>(expected = IllegalArgumentException.class)</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testBiMapSameValueDifferentKey</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</div><div class="line">    BiMap&lt;String,String&gt; biMap = HashBiMap.create();</div><div class="line">    biMap.put(<span class="string">"1"</span>,<span class="string">"Tom"</span>);</div><div class="line">    biMap.put(<span class="string">"2"</span>,<span class="string">"Tom"</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>上面的代码向BiMap中添加了两个一样的值，将抛出IllegalArgumentException异常。</p>
<h4 id="bimap-forceput"><a class="header-anchor" href="#bimap-forceput"> </a>BiMap.forcePut</h4>
<p>使用BiMap.forcePut向BiMap中put不同key的相同值。旧值会被新值替代，只保留新值。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Test</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testBiMapForcePut</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</div><div class="line">    BiMap&lt;String,String&gt; biMap = HashBiMap.create();</div><div class="line">    biMap.put(<span class="string">"1"</span>,<span class="string">"Tom"</span>);</div><div class="line">    biMap.forcePut(<span class="string">"2"</span>,<span class="string">"Tom"</span>);</div><div class="line">    assertThat(biMap.containsKey(<span class="string">"1"</span>),is(<span class="keyword">false</span>));</div><div class="line">    assertThat(biMap.containsKey(<span class="string">"2"</span>),is(<span class="keyword">true</span>));</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>key为<code>2</code>的entry会替换掉key为<code>1</code>的entry，key为<code>1</code>的entry会被删除。</p>
<h4 id="bimap-inverse"><a class="header-anchor" href="#bimap-inverse"> </a>BiMap.inverse</h4>
<p>BiMap.inverse会将键值的位置互换，即原有value成为key，key成为value。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Test</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testBiMapInverse</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</div><div class="line">    BiMap&lt;String,String&gt; biMap = HashBiMap.create();</div><div class="line">    biMap.put(<span class="string">"1"</span>,<span class="string">"Tom"</span>);</div><div class="line">    biMap.put(<span class="string">"2"</span>,<span class="string">"Harry"</span>);</div><div class="line">    assertThat(biMap.get(<span class="string">"1"</span>),is(<span class="string">"Tom"</span>));</div><div class="line">    assertThat(biMap.get(<span class="string">"2"</span>),is(<span class="string">"Harry"</span>));</div><div class="line">    BiMap&lt;String,String&gt; inverseMap = biMap.inverse();</div><div class="line">    assertThat(inverseMap.get(<span class="string">"Tom"</span>),is(<span class="string">"1"</span>));</div><div class="line">    assertThat(inverseMap.get(<span class="string">"Harry"</span>),is(<span class="string">"2"</span>));</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="table"><a class="header-anchor" href="#table"> </a>Table</h3>
<p>多个map组成的map，Table是带有两个key的集合，key分别为row和column，这两个key确定唯一的值。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">private</span> HashBasedTable&lt;Integer,Integer,String&gt; table = HashBasedTable.create();</div><div class="line"></div><div class="line"><span class="meta">@Before</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUp</span><span class="params">()</span></span>&#123;</div><div class="line">    table.put(<span class="number">1</span>,<span class="number">1</span>,<span class="string">"Rook"</span>);</div><div class="line">    table.put(<span class="number">1</span>,<span class="number">2</span>,<span class="string">"Knight"</span>);</div><div class="line">    table.put(<span class="number">1</span>,<span class="number">3</span>,<span class="string">"Bishop"</span>);</div><div class="line">    table.put(<span class="number">2</span>,<span class="number">1</span>,<span class="string">"Lateral"</span>);</div><div class="line">    table.put(<span class="number">2</span>,<span class="number">2</span>,<span class="string">"L-Shape"</span>);</div><div class="line">    table.put(<span class="number">2</span>,<span class="number">3</span>,<span class="string">"Diagonal"</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="meta">@Test</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testHashBasedTablePut</span><span class="params">()</span></span>&#123;</div><div class="line">     assertThat(table.get(<span class="number">1</span>,<span class="number">2</span>),is(<span class="string">"Knight"</span>));</div><div class="line">     assertThat(table.get(<span class="number">5</span>,<span class="number">5</span>),is(nullValue()));</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>取值、判断是否存在、删除方法</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">boolean</span> contains11 = table.contains(<span class="number">1</span>,<span class="number">1</span>);</div><div class="line"><span class="keyword">boolean</span> containColumn2 = table.containsColumn(<span class="number">2</span>);</div><div class="line"><span class="keyword">boolean</span> containsRow1 = table.containsRow(<span class="number">1</span>);</div><div class="line"><span class="keyword">boolean</span> containsRook = table.containsValue(<span class="string">"Rook"</span>);</div><div class="line">table.remove(<span class="number">1</span>,<span class="number">3</span>);</div><div class="line">table.get(<span class="number">3</span>,<span class="number">4</span>);</div></pre></td></tr></table></figure>
<h4 id="table-views"><a class="header-anchor" href="#table-views"> </a>Table views</h4>
<p>通过row()、column()取整行或整列。</p>
<ul>
<li>取整行时，map的key为列名</li>
<li>取整列时，map的key为行号</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Map&lt;Integer,String&gt; columnMap = table.column(<span class="number">1</span>);</div><div class="line">Map&lt;Integer,String&gt; rowMap = table.row(<span class="number">2</span>);</div></pre></td></tr></table></figure>
<h4 id="arraytable"><a class="header-anchor" href="#arraytable"> </a>ArrayTable</h4>
<p>ArrayTable是由二维数组支持的表的实现。</p>
<h4 id="immutabletable"><a class="header-anchor" href="#immutabletable"> </a>ImmutableTable</h4>
<p>ImmutableTable创建后，元素不能被修改。</p>
<h4 id="treebasedtable"><a class="header-anchor" href="#treebasedtable"> </a>TreeBasedTable</h4>
<p>键值均为有序的。</p>
<h3 id="range"><a class="header-anchor" href="#range"> </a>Range</h3>
<p>表示范围的集合。</p>
<pre><code>open表示不包含，closed表示包含。
</code></pre>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Test</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testRangeOpenClosed</span><span class="params">()</span> </span>&#123;</div><div class="line">    Range&lt;Integer&gt; numberRange = Range.openClosed(<span class="number">1</span>, <span class="number">10</span>);</div><div class="line">    assertThat(numberRange.contains(<span class="number">5</span>), is(<span class="keyword">true</span>));</div><div class="line">    assertThat(numberRange.contains(<span class="number">10</span>), is(<span class="keyword">true</span>));</div><div class="line">    assertThat(numberRange.contains(<span class="number">1</span>), is(<span class="keyword">false</span>));</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>方法：</p>
<ul>
<li>openClosed</li>
<li>closedOpen</li>
<li>greaterThan</li>
<li>atLeast</li>
<li>lessThan</li>
<li>atMost</li>
</ul>
<p>对象范围比较</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Test</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testPersonAgeRange</span><span class="params">()</span> </span>&#123;</div><div class="line">    Person person = <span class="keyword">new</span> Person(<span class="string">"Art"</span>, <span class="string">"Vandelay"</span>, <span class="number">37</span>, <span class="string">"M"</span>);</div><div class="line">    Person person1 = <span class="keyword">new</span> Person(<span class="string">"Johnny"</span>, <span class="string">"Quest"</span>, <span class="number">14</span>, <span class="string">"M"</span>);</div><div class="line">    Person person2 = <span class="keyword">new</span> Person(<span class="string">"Fred"</span>, <span class="string">"Flinstone"</span>, <span class="number">50</span>, <span class="string">"M"</span>);</div><div class="line">    Range&lt;Integer&gt; ageRange = Range.closed(<span class="number">35</span>, <span class="number">50</span>);</div><div class="line"></div><div class="line">    Function&lt;Person, Integer&gt; ageFunction = <span class="keyword">new</span> Function&lt;Person, Integer&gt;() &#123;</div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> Integer <span class="title">apply</span><span class="params">(Person person)</span> </span>&#123;</div><div class="line">            <span class="keyword">return</span> person.getAge();</div><div class="line">        &#125;</div><div class="line">    &#125;;</div><div class="line"></div><div class="line">    Predicate&lt;Person&gt; predicate = Predicates.compose(ageRange, ageFunction);</div><div class="line">    assertThat(predicate.apply(person), is(<span class="keyword">true</span>));</div><div class="line">    assertThat(predicate.apply(person1), is(<span class="keyword">false</span>));</div><div class="line">    assertThat(predicate.apply(person2), is(<span class="keyword">true</span>));</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>Person的compareTo方法比较了所有的属性，需要通过Predicate来比较。</p>
<h3 id="immutable-collections"><a class="header-anchor" href="#immutable-collections"> </a>Immutable collections</h3>
<p>示例</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">MultiMap&lt;Integer,String&gt; map = <span class="keyword">new</span> ImmutableListMultimap.Builder&lt;Integer,String&gt;()</div><div class="line">.put(<span class="number">1</span>,<span class="string">"Foo"</span>)</div><div class="line">.putAll(<span class="number">2</span>,<span class="string">"Foo"</span>,<span class="string">"Bar"</span>,<span class="string">"Baz"</span>)</div><div class="line">.putAll(<span class="number">4</span>,<span class="string">"Huey"</span>,<span class="string">"Duey"</span>,<span class="string">"Luey"</span>)</div><div class="line">.put(<span class="number">3</span>,<span class="string">"Single"</span>).build();</div></pre></td></tr></table></figure>
<h3 id="ordering"><a class="header-anchor" href="#ordering"> </a>Ordering</h3>
<h4 id="greatestof"><a class="header-anchor" href="#greatestof"> </a>greatestOf</h4>
<p>从大到小排序</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">private</span> Ordering&lt;Integer&gt; numberOrdering = <span class="keyword">new</span> Ordering&lt;Integer&gt;() &#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">compare</span><span class="params">(Integer left, Integer right)</span> </span>&#123;</div><div class="line">          <span class="keyword">return</span> left.compareTo(right);</div><div class="line">    &#125;</div><div class="line">&#125;;</div><div class="line"><span class="keyword">private</span> CityByPopulation cityByPopulation = <span class="keyword">new</span> CityByPopulation();</div><div class="line"><span class="keyword">private</span> CityByRainfall cityByRainfall = <span class="keyword">new</span> CityByRainfall();</div><div class="line"><span class="keyword">private</span> City.Builder cityBuilder = <span class="keyword">new</span> City.Builder();</div><div class="line"></div><div class="line"><span class="meta">@Test</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testGetGreatestOf</span><span class="params">()</span></span>&#123;</div><div class="line">    List&lt;Integer&gt; numbers = Lists.newArrayList(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">500000000</span>,<span class="number">19</span>,<span class="number">5</span>,<span class="number">100</span>,<span class="number">3000</span>);</div><div class="line">    List&lt;Integer&gt; top3 = numberOrdering.greatestOf(numbers,<span class="number">3</span>);</div><div class="line">    List&lt;Integer&gt; expected = Lists.newArrayList(<span class="number">500000000</span>,<span class="number">3000</span>,<span class="number">100</span>);</div><div class="line">    assertThat(expected,is(top3));</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="leastof"><a class="header-anchor" href="#leastof"> </a>leastOf</h4>
<p>从小到大排序</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Test</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testGetLeastOf</span><span class="params">()</span></span>&#123;</div><div class="line">    List&lt;Integer&gt; numbers = Lists.newArrayList(<span class="number">1</span>,<span class="number">500000000</span>,<span class="number">19</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">100</span>,<span class="number">3000</span>,<span class="number">2</span>);</div><div class="line">    List&lt;Integer&gt; bottom3 = numberOrdering.leastOf(numbers,<span class="number">3</span>);</div><div class="line">    List&lt;Integer&gt; expected = Lists.newArrayList(<span class="number">1</span>,<span class="number">2</span>,<span class="number">4</span>);</div><div class="line">    assertThat(expected,is(bottom3));</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="max-min"><a class="header-anchor" href="#max-min"> </a>max、min</h4>
<p>取最大最小值</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Test</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testGetMax</span><span class="params">()</span></span>&#123;</div><div class="line">    List&lt;Integer&gt; numbers = Lists.newArrayList(<span class="number">1</span>,<span class="number">500000000</span>,<span class="number">19</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">100</span>,<span class="number">3000</span>,<span class="number">2</span>);</div><div class="line">    assertThat(numberOrdering.max(numbers),is(<span class="number">500000000</span>));</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="meta">@Test</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testGetMin</span><span class="params">()</span></span>&#123;</div><div class="line">    List&lt;Integer&gt; numbers = Lists.newArrayList(<span class="number">10</span>,<span class="number">500000000</span>,<span class="number">19</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">100</span>,<span class="number">3000</span>,<span class="number">2</span>);</div><div class="line">    assertThat(numberOrdering.min(numbers),is(<span class="number">2</span>));</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="ordering-from"><a class="header-anchor" href="#ordering-from"> </a>Ordering.from</h4>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Test</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testReverseSort</span><span class="params">()</span></span>&#123;</div><div class="line">  City city1 = cityBuilder.population(<span class="number">100000</span>).build();</div><div class="line">  City city2 = cityBuilder.population(<span class="number">250000</span>).build();</div><div class="line">  City city3 = cityBuilder.population(<span class="number">350000</span>).build();</div><div class="line">  List&lt;City&gt; cities = Lists.newArrayList(city3,city2,city1);</div><div class="line">  Ordering&lt;City&gt; cityOrdering = Ordering.from(cityByPopulation);</div><div class="line">  Collections.sort(cities,cityOrdering);</div><div class="line">  <span class="comment">//In natural sorting order</span></div><div class="line">  assertThat(cities.get(<span class="number">0</span>),is(city1));</div><div class="line">  Collections.sort(cities,cityOrdering.reverse());</div><div class="line">  assertThat(cities.get(<span class="number">0</span>),is(city3));</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="nullsfirst-nullslast"><a class="header-anchor" href="#nullsfirst-nullslast"> </a>nullsFirst、nullsLast</h4>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Test</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testSortNullFirst</span><span class="params">()</span></span>&#123;</div><div class="line">    City city1 = cityBuilder.population(<span class="number">100000</span>).averageRainfall(<span class="number">55.0</span>).build();</div><div class="line">    City city2 = cityBuilder.population(<span class="number">100000</span>).averageRainfall(<span class="number">45.0</span>).build();</div><div class="line">    City city3 = cityBuilder.population(<span class="number">100000</span>).averageRainfall(<span class="number">33.8</span>).build();</div><div class="line">    List&lt;City&gt; cities = Lists.newArrayList(city1,city2,city3,<span class="keyword">null</span>);</div><div class="line">    Ordering&lt;City&gt; nullsFirstOrdering = Ordering.from(cityByPopulation).nullsFirst();</div><div class="line">    Collections.sort(cities,nullsFirstOrdering);</div><div class="line">    assertThat(cities.get(<span class="number">0</span>),is(nullValue()));</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="meta">@Test</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testSortNullLast</span><span class="params">()</span></span>&#123;</div><div class="line">    City city1 = cityBuilder.population(<span class="number">100000</span>).averageRainfall(<span class="number">55.0</span>).build();</div><div class="line">    City city2 = cityBuilder.population(<span class="number">100000</span>).averageRainfall(<span class="number">45.0</span>).build();</div><div class="line">    City city3 = cityBuilder.population(<span class="number">100000</span>).averageRainfall(<span class="number">33.8</span>).build();</div><div class="line">    List&lt;City&gt; cities = Lists.newArrayList(<span class="keyword">null</span>,city1,city2,city3);</div><div class="line">    Ordering&lt;City&gt; nullsLastOrdering = Ordering.from(cityByPopulation).nullsLast();</div><div class="line">    Collections.sort(cities,nullsLastOrdering);</div><div class="line">    assertThat(cities.get(<span class="number">3</span>),is(nullValue()));</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="compound"><a class="header-anchor" href="#compound"> </a>compound</h4>
<p>复合排序</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Test</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testSecondarySort</span><span class="params">()</span></span>&#123;</div><div class="line">    City city1 = cityBuilder.population(<span class="number">100000</span>).averageRainfall(<span class="number">55.0</span>).build();</div><div class="line">    City city2 = cityBuilder.population(<span class="number">100000</span>).averageRainfall(<span class="number">45.0</span>).build();</div><div class="line">    City city3 = cityBuilder.population(<span class="number">100000</span>).averageRainfall(<span class="number">33.8</span>).build();</div><div class="line">    List&lt;City&gt; cities = Lists.newArrayList(city1,city2,city3);</div><div class="line">    Ordering&lt;City&gt; secondaryOrdering = Ordering.from(cityByPopulation).compound(cityByRainfall);</div><div class="line">    Collections.sort(cities,secondaryOrdering);</div><div class="line">    assertThat(cities.get(<span class="number">0</span>),is(city3));</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-87257256-1', 'auto');
  ga('send', 'pageview');

</script>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Guava Function]]></title>
      <url>http://mei6.site/2016/11/13/guava-function/</url>
      <content type="html"><![CDATA[<!-- 开始正文 -->
<p>目录</p>
<ol>
<li><a href="http://www.mei6.site/2016/11/12/PacktPub-Getting-Started-with-Google-Guava/" target="_blank" rel="external">Getting.Started.with.Google.Guava</a></li>
<li><a href="http://www.mei6.site/2016/11/13/guava-util/" target="_blank" rel="external">Guava Utilities</a></li>
<li><a href="http://www.mei6.site/2016/11/13/guava-function/" target="_blank" rel="external">Guava Function</a></li>
<li><a href="http://www.mei6.site/2016/11/13/guava-collection/" target="_blank" rel="external">Guava Collection</a></li>
<li><a href="http://www.mei6.site/2016/11/13/guava-Concurrency/" target="_blank" rel="external">Guava Concurrency</a></li>
<li><a href="http://www.mei6.site/2016/11/13/guava-Cache/" target="_blank" rel="external">Guava Cache</a></li>
<li><a href="http://www.mei6.site/2016/11/13/guava-EventBus/" target="_blank" rel="external">Guava EventBus</a></li>
<li><a href="http://www.mei6.site/2016/11/13/guava-Files/" target="_blank" rel="external">Guava Files</a></li>
<li><a href="http://www.mei6.site/2016/11/13/guava-Odds-Ends/" target="_blank" rel="external">Guava Odds Ends</a></li>
</ol>
<hr>
<h2 id="函数式编程"><a class="header-anchor" href="#函数式编程"> </a>函数式编程</h2>
<h3 id="function-接口"><a class="header-anchor" href="#function-接口"> </a>Function 接口</h3>
<p>Fuction接口只有两个方法</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Function</span>&lt;<span class="title">F</span>,<span class="title">T</span>&gt; </span>&#123;</div><div class="line">    <span class="function">T <span class="title">apply</span><span class="params">(F input)</span></span>;</div><div class="line">    <span class="function"><span class="keyword">boolean</span> <span class="title">equals</span><span class="params">(Object object)</span></span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>实现日期格式转换功能</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DateFormatFunction</span> <span class="keyword">implements</span> <span class="title">Function</span>&lt;<span class="title">Date</span>,<span class="title">String</span>&gt; </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> String dateFormat;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">DateFormatFunction</span><span class="params">(String dateFormat)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.dateFormat = dateFormat;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">apply</span><span class="params">(Date input)</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">new</span> SimpleDateFormat(dateFormat).format(input);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>简化写法，使用匿名类实现</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">Function&lt;Date,String&gt; function = <span class="keyword">new</span> Function&lt;Date, String&gt;() &#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">apply</span><span class="params">( Date input)</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">new</span></div><div class="line">                SimpleDateFormat(<span class="string">"dd/mm/yyyy"</span>).format(input);</div><div class="line">    &#125;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<p>上面只是举例如何实现Function接口，格式化日期有更简单的方法。</p>
<h3 id="functions-类"><a class="header-anchor" href="#functions-类"> </a>Functions 类</h3>
<p>主要方法：</p>
<ul>
<li>Functions.forMap</li>
<li>Functions.compose</li>
</ul>
<h3 id="predicate-接口"><a class="header-anchor" href="#predicate-接口"> </a>Predicate 接口</h3>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Predicate</span>&lt;<span class="title">T</span>&gt; </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">boolean</span> <span class="title">apply</span><span class="params">(T input)</span></span>;</div><div class="line">    <span class="function"><span class="keyword">boolean</span> <span class="title">equals</span><span class="params">(Object object)</span></span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="predicates-类"><a class="header-anchor" href="#predicates-类"> </a>Predicates 类</h3>
<ul>
<li>Predicates.and</li>
<li>Predicates.or</li>
<li>Predicates.not</li>
<li>Predicates.compose</li>
</ul>
<p>用来比较、过滤条件</p>
<h3 id="supplier-接口"><a class="header-anchor" href="#supplier-接口"> </a>Supplier 接口</h3>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Supplier</span>&lt;<span class="title">T</span>&gt; </span>&#123;</div><div class="line">    <span class="function">T <span class="title">get</span><span class="params">()</span></span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>get方法返回泛型T的实例</p>
<h3 id="suppliers-类"><a class="header-anchor" href="#suppliers-类"> </a>Suppliers 类</h3>
<p>对象缓存的实现</p>
<ul>
<li>Suppliers.memoize</li>
<li>Suppliers.memoizeWithExpiration</li>
</ul>
<blockquote>
<p>以上参考<a href="http://www.cnblogs.com/renchunxiao/p/3674604.html" target="_blank" rel="external">使用Guava进行函数式编程</a>，内容翻译的很详细。</p>
</blockquote>
<hr>
<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-87257256-1', 'auto');
  ga('send', 'pageview');

</script>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Guava Utilities]]></title>
      <url>http://mei6.site/2016/11/13/guava-util/</url>
      <content type="html"><![CDATA[<!-- 开始正文 -->
<p>目录</p>
<ol>
<li><a href="http://www.mei6.site/2016/11/12/PacktPub-Getting-Started-with-Google-Guava/" target="_blank" rel="external">Getting.Started.with.Google.Guava</a></li>
<li><a href="http://www.mei6.site/2016/11/13/guava-util/" target="_blank" rel="external">Guava Utilities</a></li>
<li><a href="http://www.mei6.site/2016/11/13/guava-function/" target="_blank" rel="external">Guava Function</a></li>
<li><a href="http://www.mei6.site/2016/11/13/guava-collection/" target="_blank" rel="external">Guava Collection</a></li>
<li><a href="http://www.mei6.site/2016/11/13/guava-Concurrency/" target="_blank" rel="external">Guava Concurrency</a></li>
<li><a href="http://www.mei6.site/2016/11/13/guava-Cache/" target="_blank" rel="external">Guava Cache</a></li>
<li><a href="http://www.mei6.site/2016/11/13/guava-EventBus/" target="_blank" rel="external">Guava EventBus</a></li>
<li><a href="http://www.mei6.site/2016/11/13/guava-Files/" target="_blank" rel="external">Guava Files</a></li>
<li><a href="http://www.mei6.site/2016/11/13/guava-Odds-Ends/" target="_blank" rel="external">Guava Odds Ends</a></li>
</ol>
<hr>
<h2 id="基本工具类"><a class="header-anchor" href="#基本工具类"> </a>基本工具类</h2>
<h3 id="joiner"><a class="header-anchor" href="#joiner"> </a>Joiner</h3>
<p>通常的字符串操作</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> String <span class="title">buildString</span><span class="params">(List&lt;String&gt; stringList, String delimiter)</span></span>&#123;</div><div class="line">   StringBuilder builder = <span class="keyword">new</span> StringBuilder();</div><div class="line">   <span class="keyword">for</span> (String s : stringList) &#123;</div><div class="line">       <span class="keyword">if</span>(s !=<span class="keyword">null</span>)&#123;</div><div class="line">           builder.append(s).append(delimiter);</div><div class="line">       &#125; &#125;</div><div class="line">   builder.setLength(builder.length() - delimiter.length());</div><div class="line">   <span class="keyword">return</span> builder.toString();</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>使用Joiner操作，跳过空值：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Joiner.on(<span class="string">"|"</span>).skipNulls().join(stringList);</div></pre></td></tr></table></figure>
<p>替换空值：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Joiner.on(<span class="string">"|"</span>).useForNull(<span class="string">"no value"</span>).join(stringList);</div></pre></td></tr></table></figure>
<p>另外两个处理字符串的例子：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">Joiner stringJoiner = Joiner.on(<span class="string">"|"</span>).skipNulls();</div><div class="line"><span class="comment">//the useForNull() method returns a new instance of the Joiner!</span></div><div class="line">stringJoiner.useForNull(<span class="string">"missing"</span>);</div><div class="line">stringJoiner.join(<span class="string">"foo"</span>,<span class="string">"bar"</span>,<span class="keyword">null</span>);</div><div class="line"></div><div class="line">-------</div><div class="line"></div><div class="line">StringBuilder stringBuilder = <span class="keyword">new</span> StringBuilder();</div><div class="line">Joiner joiner = Joiner.on(<span class="string">"|"</span>).skipNulls();</div><div class="line"><span class="comment">// returns the StringBuilder instance with the values foo,bar,baz appeneded with "|" delimiters</span></div><div class="line">joiner.appendTo(stringBuilder,<span class="string">"foo"</span>,<span class="string">"bar"</span>,<span class="string">"baz"</span>)</div></pre></td></tr></table></figure>
<p>Joiner不仅仅处理字符串，还能处理各种集合类型，调用对象的<code>toString</code>方法，append 集合到流：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">FileWriter fileWriter = <span class="keyword">new</span> FileWriter(<span class="keyword">new</span> File(<span class="string">"path"</span>)):List&lt;Date&gt; dateList = getDates();</div><div class="line">Joiner joiner = Joiner.on(<span class="string">"#"</span>).useForNulls(<span class="string">" "</span>);<span class="comment">// returns the FileWriter instance with the values appended into it</span>joiner.appendTo(fileWriter,dateList);</div></pre></td></tr></table></figure>
<p>MapJoiner方法处理键值对类型</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mapJoiner = Joiner.on(<span class="string">"#"</span>).withKeyValueSeparator(<span class="string">"="</span>);</div></pre></td></tr></table></figure>
<h3 id="splitter"><a class="header-anchor" href="#splitter"> </a>Splitter</h3>
<p>用分隔符拆分字符串</p>
<p>不使用类库的方式：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">String testString = <span class="string">"Monday,Tuesday,,Thursday,Friday,,"</span>;</div><div class="line"></div><div class="line"><span class="comment">// parts is [Monday, Tuesday, , Thursday,Friday]</span></div><div class="line">String[] parts = testString.split(<span class="string">","</span>);</div></pre></td></tr></table></figure>
<p>Splitter，还支持正则表达式</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Splitter.on(<span class="string">'|'</span>).split(<span class="string">"foo|bar|baz"</span>);Splitter splitter = Splitter.on(<span class="string">"\\d+"</span>);</div></pre></td></tr></table></figure>
<p>trim头尾的空格</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// Splits on '|' and removes any leading or trailing whitespace</span></div><div class="line">Splitter splitter = Splitter.on(<span class="string">'|'</span>).trimResults();</div></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">Splitter splitter = Splitter.on(<span class="string">'|'</span>);</div><div class="line"></div><div class="line"><span class="comment">// Next call returns a new instance, does not modify the original!</span></div><div class="line"><span class="comment">// 返回新实例，不修改原始对象</span></div><div class="line">splitter.trimResults();</div><div class="line"></div><div class="line"><span class="comment">// Result would still contain empty elements</span></div><div class="line">Iterable&lt;String&gt; parts = splitter.split(<span class="string">"1|2|3|||"</span>);</div></pre></td></tr></table></figure>
<p>MapSplitter</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// MapSplitter is defined as an inner class of Splitter</span></div><div class="line">Splitter.MapSplitter mapSplitter = Splitter.on(<span class="string">"#"</span>).withKeyValueSeparator(<span class="string">"="</span>);</div></pre></td></tr></table></figure>
<h3 id="strings-in-guava"><a class="header-anchor" href="#strings-in-guava"> </a>strings in Guava</h3>
<h4 id="charsets"><a class="header-anchor" href="#charsets"> </a>Charsets</h4>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">byte</span>[] bytes2 = <span class="string">"foobarbaz"</span>.getBytes(Charsets.UTF_8);</div></pre></td></tr></table></figure>
<h4 id="strings"><a class="header-anchor" href="#strings"> </a>Strings</h4>
<p>Have you ever had to write something like the following?</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">StringBuilder builder = <span class="keyword">new</span> StringBuilder(<span class="string">"foo"</span>);</div><div class="line"></div><div class="line"><span class="keyword">char</span> c = <span class="string">'x'</span>;</div><div class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">3</span>; i++)&#123;</div><div class="line">    builder.append(c);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">return</span> builder.toString();</div></pre></td></tr></table></figure>
<p>The previous example, which spans 6 lines of code, can now be replaced with one line.</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Strings.padEnd(<span class="string">"foo"</span>,<span class="number">6</span>,<span class="string">'x'</span>);</div></pre></td></tr></table></figure>
<blockquote>
<p>中间参数6表示返回字符串的最小长度，而不是添加了多少次x。</p>
</blockquote>
<p>如遇null，建议使用nullToEmpty。</p>
<h4 id="charmatcher"><a class="header-anchor" href="#charmatcher"> </a>CharMatcher</h4>
<p>字符匹配、替换操作</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">CharMatcher.BREAKING_WHITESPACE.replaceFrom(stringWithLinebreaks,<span class="string">' '</span>);</div></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Test</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testRemoveWhiteSpace</span><span class="params">()</span></span>&#123;</div><div class="line">    String tabsAndSpaces = <span class="string">"String  with      spaces     and           tabs"</span>;</div><div class="line">    String expected = <span class="string">"String with spaces and tabs"</span>;</div><div class="line">    String scrubbed = CharMatcher.WHITESPACE.collapseFrom(tabsAndSpaces,<span class="string">' '</span>);</div><div class="line">    assertThat(scrubbed,is(expected));</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>提取特定字符，字符表达式还可以连写，组成多个条件</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Test</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testRetainFrom</span><span class="params">()</span></span>&#123;</div><div class="line">    String lettersAndNumbers = <span class="string">"foo989yxbar234"</span>;</div><div class="line">    String expected = <span class="string">"989234"</span>;</div><div class="line">    String retained = CharMatcher.JAVA_DIGIT.retainFrom(lettersAndNumbers);</div><div class="line">    assertThat(expected,is(retained));</div><div class="line">&#125;</div><div class="line"></div><div class="line">---</div><div class="line"></div><div class="line">CharMatcher cm = CharMatcher.JAVA_DIGIT.or(CharMatcher.WHITESPACE);</div></pre></td></tr></table></figure>
<h4 id="preconditions"><a class="header-anchor" href="#preconditions"> </a>Preconditions</h4>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PreconditionExample</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> String state;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">int</span>[] values = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">5</span>];</div><div class="line">    <span class="keyword">private</span> <span class="keyword">int</span> currentIndex;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">PreconditionExample</span><span class="params">(String state)</span> </span>&#123;</div><div class="line">        <span class="comment">//returns value of object if not null</span></div><div class="line">        <span class="keyword">this</span>.state = checkNotNull(state,<span class="string">"Label can't be null"</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updateCurrentIndexValue</span><span class="params">(<span class="keyword">int</span> index, <span class="keyword">int</span> valueToSet)</span> </span>&#123;</div><div class="line">        <span class="comment">//Check index valid first</span></div><div class="line">        <span class="keyword">this</span>.currentIndex = checkElementIndex(index, values.length, <span class="string">"Index out of bounds for values"</span>);</div><div class="line">        <span class="comment">//Validate state of value</span></div><div class="line">        checkArgument(valueToSet &lt;= <span class="number">100</span>,<span class="string">"Value can't be more than 100"</span>);</div><div class="line">        values[<span class="keyword">this</span>.currentIndex] = valueToSet;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doOperation</span><span class="params">()</span></span>&#123;</div><div class="line">        checkState(validateObjectState(),<span class="string">"Can't perform operation"</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">validateObjectState</span><span class="params">()</span></span>&#123;</div><div class="line">      <span class="keyword">return</span> <span class="keyword">this</span>.state.equalsIgnoreCase(<span class="string">"open"</span>) &amp;&amp; values[<span class="keyword">this</span>.currentIndex]==<span class="number">10</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line"></div><div class="line">    <span class="keyword">public</span> <span class="keyword">int</span>[] getValues() &#123;</div><div class="line">        <span class="keyword">return</span> values;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>主要方法：</p>
<ul>
<li>checkNotNull (T object, Object message)</li>
<li>checkElementIndex (int index, int size, Object message)</li>
<li>checkArgument(Boolean expression, Object message)</li>
<li>checkState(Boolean expression, Object message)</li>
</ul>
<p>用来</p>
<ul>
<li>检查字符串错误，返回错误消息文本</li>
<li>检查数字，正确返回数字本身，错误抛出异常</li>
</ul>
<p>可以查看源码com.google.common.base.Preconditions的实现，封装了各种检查</p>
<h3 id="object-utilities"><a class="header-anchor" href="#object-utilities"> </a>Object utilities</h3>
<p>重写toString方法</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">return</span> Objects.toStringHelper(<span class="keyword">this</span>)</div><div class="line">            .omitNullValues()</div><div class="line">            .add(<span class="string">"title"</span>, title)</div><div class="line">            .add(<span class="string">"author"</span>, author)</div><div class="line">            .add(<span class="string">"publisher"</span>, publisher)</div><div class="line">            .add(<span class="string">"price"</span>, price)</div><div class="line">            .add(<span class="string">"isbn"</span>, isbn).toString();</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>重写hashCode方法</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">hashCode</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">return</span> Objects.hashCode(title, author, publisher, isbn);&#125;</div></pre></td></tr></table></figure>
<p>重写compareTo方法</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">compareTo</span><span class="params">(Book o)</span> </span>&#123;</div><div class="line">    <span class="keyword">return</span> ComparisonChain.start()</div><div class="line">            .compare(<span class="keyword">this</span>.title, o.getTitle())</div><div class="line">            .compare(<span class="keyword">this</span>.author, o.getAuthor())</div><div class="line">            .compare(<span class="keyword">this</span>.publisher, o.getPublisher())</div><div class="line">            .compare(<span class="keyword">this</span>.isbn, o.getIsbn())</div><div class="line">            .compare(<span class="keyword">this</span>.price, o.getPrice())</div><div class="line">            .result();</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-87257256-1', 'auto');
  ga('send', 'pageview');

</script>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Aria2GUI：绕过百度网盘满速下载]]></title>
      <url>http://mei6.site/2016/11/13/Aria2GUI/</url>
      <content type="html"><![CDATA[<!-- abstract -->
<p><img src="http://www.sdifenzhou.com/wp-content/uploads/2016/11/Aria2GUInew.jpg" alt=""></p>
<a id="more"></a>
<!-- 开始正文 -->
<p>看起来是个神器，感谢作者，<a href="http://www.sdifenzhou.com/aria2guinew.html" target="_blank" rel="external">博客链接</a></p>
<p>下载要点这个
<img src="http://ogjeb66bz.bkt.clouddn.com/14790250259177.jpg" alt=""></p>
<p>试了一下，出差就酒店的下载速度
<img src="http://ogjeb66bz.bkt.clouddn.com/14790250400044.jpg" alt=""></p>
<blockquote>
<p>阿里数据库同步的otter使用的也是Aira2客户端，不过没有GUI。</p>
</blockquote>
<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-87257256-1', 'auto');
  ga('send', 'pageview');

</script>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Ceceree]]></title>
      <url>http://mei6.site/2016/11/13/ceceree/</url>
      <content type="html"><![CDATA[<!-- abstract -->
<p>忍不住想分享一下，Mac上的App心愿单Ceceree</p>
<p><img src="http://ogjeb66bz.bkt.clouddn.com/14790227328887.jpg" alt=""></p>
<a id="more"></a>
<!-- 开始正文 -->
<p>有没有看到很好的App但是很贵，舍不得下手？又不知道什么时候限免？</p>
<p>Ceceree就是用来收藏心仪App的地方，只要复制App的链接，即可收藏，并且会提示你限免。IOS或者Mac的App都可以收藏。</p>
<p>缺点：不能放到任务栏，只能在Docker里开窗口，有点儿不爽。</p>
<p>还有就是买了之后还没有碰到限免，额，可能还得再等等。</p>
<blockquote>
<p>PS：正版的话不到RMB30，如果有条件，请支持正版。</p>
</blockquote>
<p>附上其他人的详细介绍，<a href="http://www.sdifenzhou.com/ceceree123.html" target="_blank" rel="external">http://www.sdifenzhou.com/ceceree123.html</a></p>
<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-87257256-1', 'auto');
  ga('send', 'pageview');

</script>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Getting.Started.with.Google.Guava]]></title>
      <url>http://mei6.site/2016/11/12/PacktPub-Getting-Started-with-Google-Guava/</url>
      <content type="html"><![CDATA[<!-- abstract -->
<p><img src="http://ogjeb66bz.bkt.clouddn.com/14789679847753.jpg" alt=""></p>
<p>Google 的core java库，抽空看一下</p>
<a id="more"></a>
<!-- 开始正文 -->
<p>目录</p>
<ol>
<li><a href="http://www.mei6.site/2016/11/12/PacktPub-Getting-Started-with-Google-Guava/" target="_blank" rel="external">Getting.Started.with.Google.Guava</a></li>
<li><a href="http://www.mei6.site/2016/11/13/guava-util/" target="_blank" rel="external">Guava Utilities</a></li>
<li><a href="http://www.mei6.site/2016/11/13/guava-function/" target="_blank" rel="external">Guava Function</a></li>
<li><a href="http://www.mei6.site/2016/11/13/guava-collection/" target="_blank" rel="external">Guava Collection</a></li>
<li><a href="http://www.mei6.site/2016/11/13/guava-Concurrency/" target="_blank" rel="external">Guava Concurrency</a></li>
<li><a href="http://www.mei6.site/2016/11/13/guava-Cache/" target="_blank" rel="external">Guava Cache</a></li>
<li><a href="http://www.mei6.site/2016/11/13/guava-EventBus/" target="_blank" rel="external">Guava EventBus</a></li>
<li><a href="http://www.mei6.site/2016/11/13/guava-Files/" target="_blank" rel="external">Guava Files</a></li>
<li><a href="http://www.mei6.site/2016/11/13/guava-Odds-Ends/" target="_blank" rel="external">Guava Odds Ends</a></li>
</ol>
<p>Google的核心Java工具包，从08年开始的项目，看看有什么对我有帮助的。</p>
<hr>
<p>Guava 资料</p>
<p><a href="https://github.com/google/guava" target="_blank" rel="external">GitHub</a>
<a href="https://github.com/google/guava/wiki" target="_blank" rel="external">User Guide</a>
<a href="http://www.tfnico.com/presentations/google-guava" target="_blank" rel="external">Other Help Links</a></p>
<hr>
<h2 id="准备工作"><a class="header-anchor" href="#准备工作"> </a>准备工作</h2>
<p>添加Guava依赖</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/com.google.guava/guava --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.google.guava<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>guava<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>14.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div></pre></td></tr></table></figure>
<p>Guava一直在维护，目前最新版本是20.0，2016.10有新的release：
<img src="http://ogjeb66bz.bkt.clouddn.com/14789742921184.jpg" alt=""></p>
<p>下载书中的源码
<a href="https://www.packtpub.com/books/content/support/13091" target="_blank" rel="external">https://www.packtpub.com/books/content/support/13091</a></p>
<p>创建一个测试的小项目，修改Pom，下载的代码版本有点儿老，只更新了maven-compiler-plugin的版本，其他依赖的版本没动，避免升级版本示例代码跑不起来。</p>
<p>把示例代码拷入到项目中，包括测试代码，用Maven Install一下(skip test，个别单元测试有问题)，在项目根目录下创建一个git库，share到GitHub，地址：<a href="https://github.com/fg-meizhi/Getting.Started.with.Google.Guava" target="_blank" rel="external">Getting.Started.with.Google.Guava</a>。</p>
<p>好了，看看Guava都能做什么。</p>
<hr>
<p>目录</p>
<ol>
<li><a href="http://www.mei6.site/2016/11/12/PacktPub-Getting-Started-with-Google-Guava/" target="_blank" rel="external">Getting.Started.with.Google.Guava</a></li>
<li><a href="http://www.mei6.site/2016/11/13/guava-util/" target="_blank" rel="external">Guava Utilities</a></li>
<li><a href="http://www.mei6.site/2016/11/13/guava-function/" target="_blank" rel="external">Guava Function</a></li>
<li><a href="http://www.mei6.site/2016/11/13/guava-collection/" target="_blank" rel="external">Guava Collection</a></li>
<li><a href="http://www.mei6.site/2016/11/13/guava-Concurrency/" target="_blank" rel="external">Guava Concurrency</a></li>
<li><a href="http://www.mei6.site/2016/11/13/guava-Cache/" target="_blank" rel="external">Guava Cache</a></li>
<li><a href="http://www.mei6.site/2016/11/13/guava-EventBus/" target="_blank" rel="external">Guava EventBus</a></li>
<li><a href="http://www.mei6.site/2016/11/13/guava-Files/" target="_blank" rel="external">Guava Files</a></li>
<li><a href="http://www.mei6.site/2016/11/13/guava-Odds-Ends/" target="_blank" rel="external">Guava Odds Ends</a></li>
</ol>
<hr>
<p>感想，自己读书的速度太慢了，还要做点儿笔记备忘，速度就更慢了。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[有了没事儿瞎咧咧的地方]]></title>
      <url>http://mei6.site/2016/11/12/hello-there/</url>
      <content type="html"><![CDATA[<p>一直没有养成写博客的习惯，几年前在javaeye写过一点儿东西，后来东西都是放在Evernote里面。</p>
<p>借助几篇文章，很快的帮我搭起来这个简单的博客，感谢下面这几篇文章的作者，把他们列在这里，希望能帮助有我这样需求的人少走弯路：</p>
<ul>
<li><a href="http://jiji262.github.io/2016/04/15/2016-04-15-hexo-github-pages-blog/index.html" target="_blank" rel="external">手把手教你使用Hexo + Github Pages搭建个人独立博客</a></li>
<li><a href="http://www.jianshu.com/p/05289a4bc8b2" target="_blank" rel="external">如何搭建一个独立博客——简明Github Pages与Hexo教程</a></li>
<li><a href="https://www.haomwei.com/technology/maupassant-hexo.html" target="_blank" rel="external">大道至简——Hexo简洁主题推荐</a></li>
<li><a href="http://www.selfrebuild.net/2016/08/25/mweb-hexo-blog-config/" target="_blank" rel="external">使用 Mweb 配合 hexo 编写 github 博客</a></li>
<li><a href="https://joilence.github.io/2016/07/14/improve-blog/" target="_blank" rel="external">Hexo 博客进阶配置与常见问题</a></li>
<li><a href="http://codingpub.github.io/2016/04/10/%E5%AE%9A%E5%88%B6Hexo-maupassant/" target="_blank" rel="external">定制Hexo - maupassant</a></li>
<li><a href="https://qifuguang.me/2016/08/14/%E5%A6%82%E4%BD%95%E4%B8%BA%E5%8D%9A%E5%AE%A2%E5%A2%9E%E5%8A%A0%E6%89%93%E8%B5%8F%E5%8A%9F%E8%83%BD/" target="_blank" rel="external">如何为博客增加打赏功能</a></li>
</ul>
]]></content>
    </entry>
    
  
  
</search>
